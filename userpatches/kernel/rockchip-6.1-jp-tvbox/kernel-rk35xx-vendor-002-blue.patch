From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: John Doe <john.doe@somewhere.on.planet>
Date: Wed, 26 Jun 2024 01:22:48 +0800
Subject: Patching kernel rk35xx files net/rfkill/rfkill-bt.c
 net/rfkill/rfkill-wlan.c

Signed-off-by: John Doe <john.doe@somewhere.on.planet>
---
 net/rfkill/rfkill-bt.c   | 37 +++++++---
 net/rfkill/rfkill-wlan.c |  6 +-
 2 files changed, 28 insertions(+), 15 deletions(-)

diff --git a/net/rfkill/rfkill-bt.c b/net/rfkill/rfkill-bt.c
index 73b802c7faa4..b404d2e5e875 100644
--- a/net/rfkill/rfkill-bt.c
+++ b/net/rfkill/rfkill-bt.c
@@ -174,14 +174,19 @@ static int rfkill_rk_setup_wake_irq(struct rfkill_rk_data *rfkill, int flag)
 			goto fail2;
 		rfkill->irq_req = 1;
 		LOG("** disable irq\n");
 		disable_irq(irq->irq);
 		/*ret = disable_irq_wake(irq->irq);init irq wake is disabled,no need to disable*/
+		ret = enable_irq_wake(irq->irq);
+		if (ret)
+			goto fail3;		
 	}
 
 	return ret;
-
+	
+fail3:
+	free_irq(irq->irq, rfkill);
 fail2:
 	gpio_free(irq->gpio.io);
 fail1:
 	return ret;
 }
@@ -285,11 +290,17 @@ static int rfkill_rk_set_power(void *data, bool blocked)
 	DBG("Enter %s\n", __func__);
 
 	DBG("Set blocked:%d\n", blocked);
 
 	toggle = rfkill->pdata->power_toggle;
-
+	
+	if (toggle) {
+		if (rfkill_get_wifi_power_state(&wifi_power)) {
+			LOG("%s: cannot get wifi power state!\n", __func__);
+			return -1;
+		}
+	}
 
 	DBG("%s: toggle = %s\n", __func__, toggle ? "true" : "false");
 
 	if (!blocked) {
 		if (toggle) {
@@ -308,10 +319,12 @@ static int rfkill_rk_set_power(void *data, bool blocked)
 		if (gpio_is_valid(poweron->io)) {
 			if (gpio_get_value(poweron->io) == !poweron->enable) {
 				gpio_direction_output(poweron->io,
 						      !poweron->enable);
 				msleep(20);
+				if (gpio_is_valid(wake_host->io))
+					gpio_direction_input(wake_host->io);				
 				gpio_direction_output(poweron->io,
 						      poweron->enable);
 				msleep(20);
 			}
 		}
@@ -323,14 +336,14 @@ static int rfkill_rk_set_power(void *data, bool blocked)
 				msleep(20);
 				gpio_direction_output(reset->io, reset->enable);
 			}
 		}
 
-		if (gpio_is_valid(wake_host->io)) {
-			LOG("%s: set bt wake_host input!\n", __func__);
-			gpio_direction_input(wake_host->io);
-		}
+		//if (gpio_is_valid(wake_host->io)) {
+		//	LOG("%s: set bt wake_host input!\n", __func__);
+		//	gpio_direction_input(wake_host->io);
+		//}
 
 		if (pinctrl && gpio_is_valid(rts->io)) {
 			pinctrl_select_state(pinctrl, rts->gpio_state);
 			LOG("ENABLE UART_RTS\n");
 			gpio_direction_output(rts->io, rts->enable);
@@ -360,14 +373,14 @@ static int rfkill_rk_set_power(void *data, bool blocked)
 						      !reset->enable);
 				msleep(20);
 			}
 		}
 		if (toggle) {
-			if (rfkill_get_wifi_power_state(&wifi_power)) {
-				LOG("%s: cannot get wifi power state!\n", __func__);
-				return -EPERM;
-			}
+			//if (rfkill_get_wifi_power_state(&wifi_power)) {
+			//	LOG("%s: cannot get wifi power state!\n", __func__);
+			//	return -EPERM;
+			//}
 			if (!wifi_power) {
 				LOG("%s: bt will set vbat to low\n", __func__);
 				rfkill_set_wifi_bt_power(0);
 			} else {
 				LOG("%s: bt shouldn't control the vbat\n", __func__);
@@ -405,11 +418,11 @@ static int rfkill_rk_pm_prepare(struct device *dev)
 
 	// enable bt wakeup host
 	if (gpio_is_valid(wake_host_irq->gpio.io) && bt_power_state) {
 		DBG("enable irq for bt wakeup host\n");
 		enable_irq(wake_host_irq->irq);
-		enable_irq_wake(wake_host_irq->irq);
+		//enable_irq_wake(wake_host_irq->irq);
 	}
 
 #ifdef CONFIG_RFKILL_RESET
 	rfkill_init_sw_state(rfkill->rfkill_dev, BT_BLOCKED);
 	rfkill_set_sw_state(rfkill->rfkill_dev, BT_BLOCKED);
@@ -435,11 +448,11 @@ static void rfkill_rk_pm_complete(struct device *dev)
 	rts = &rfkill->pdata->rts_gpio;
 
 	if (gpio_is_valid(wake_host_irq->gpio.io) && bt_power_state) {
 		LOG("** disable irq\n");
 		disable_irq(wake_host_irq->irq);
-		disable_irq_wake(wake_host_irq->irq);
+		//disable_irq_wake(wake_host_irq->irq);
 	}
 
 	if (rfkill->pdata->pinctrl && gpio_is_valid(rts->io)) {
 		DBG("Enable UART_RTS\n");
 		gpio_direction_output(rts->io, rts->enable);
diff --git a/net/rfkill/rfkill-wlan.c b/net/rfkill/rfkill-wlan.c
index 338b59c53dbc..1b212d04e0a8 100644
--- a/net/rfkill/rfkill-wlan.c
+++ b/net/rfkill/rfkill-wlan.c
@@ -245,13 +245,13 @@ int rockchip_wifi_power(int on)
 		LOG("%s: wifi power is setted to be remain on.", __func__);
 		return 0;
 	}
 	power_set_time++;
 
-	if (!rfkill_get_bt_power_state(&bt_power, &toggle)) {
-		LOG("%s: toggle = %s\n", __func__, toggle ? "true" : "false");
-	}
+	//if (!rfkill_get_bt_power_state(&bt_power, &toggle)) {
+	//	LOG("%s: toggle = %s\n", __func__, toggle ? "true" : "false");
+	//}
 
 	if (mrfkill->pdata->mregulator.power_ctrl_by_pmu) {
 		int ret = -1;
 		char *ldostr;
 		int level = mrfkill->pdata->mregulator.enable;
-- 
Created with Armbian build tools https://github.com/armbian/build

